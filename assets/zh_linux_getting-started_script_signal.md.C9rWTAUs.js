import{_ as i,c as a,o as h,ah as l}from"./chunks/framework.D2ZEUu4m.js";const c=JSON.parse('{"title":"信号处理","description":"","frontmatter":{},"headers":[],"relativePath":"zh/linux/getting-started/script/signal.md","filePath":"zh/linux/getting-started/script/signal.md","lastUpdated":1746806643000}'),e={name:"zh/linux/getting-started/script/signal.md"};function t(n,s,k,p,d,r){return h(),a("div",null,s[0]||(s[0]=[l(`<h1 id="信号处理" tabindex="-1">信号处理 <a class="header-anchor" href="#信号处理" aria-label="Permalink to “信号处理”">​</a></h1><h2 id="bash-shell" tabindex="-1">Bash Shell <a class="header-anchor" href="#bash-shell" aria-label="Permalink to “Bash Shell”">​</a></h2><p>在默认情况下，Bash Shell 会忽略 <code>SIGQUIT(3)</code> 和 <code>SIGTERM(15)</code> 信号， 因此执行下面的命令不会有任何反应（<code>$$</code> 是当前 Shell 的进程 ID）。</p><div class="language-bash"><button title="复制代码" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kill</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> $$</span></span></code></pre></div><div class="language-bash"><button title="复制代码" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kill</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -15</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> $$</span></span></code></pre></div><p>如果收到 <code>SIGHUP(1)</code> 信号，Bash Shell 会退出，但在退出前， 它会把 <code>SIGHUP</code> 信号传给所有由该 Shell 启动的进程和脚本。</p><div class="language-bash"><button title="复制代码" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kill</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> $$</span></span></code></pre></div><h2 id="trap" tabindex="-1">TRAP <a class="header-anchor" href="#trap" aria-label="Permalink to “TRAP”">​</a></h2><p>可以使用 <code>trap</code> 命令捕获信号。</p><div class="language-bash"><button title="复制代码" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">trap</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commands</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> signals</span></span></code></pre></div><h3 id="捕获信号" tabindex="-1">捕获信号 <a class="header-anchor" href="#捕获信号" aria-label="Permalink to “捕获信号”">​</a></h3><p>键盘 <code>Ctrl+C</code> 的信号是 <code>SIGINT</code>。</p><div class="language-bash"><button title="复制代码" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/usr/bin/env bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">trap</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;echo &#39; Trapped Ctrl-C&#39;&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SIGINT</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ $count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-le</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;loop #</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$count</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    sleep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $count </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">done</span></span></code></pre></div><div class="language-txt"><button title="复制代码" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>loop #1</span></span>
<span class="line"><span>loop #2</span></span>
<span class="line"><span>^C Trapped Ctrl-C</span></span>
<span class="line"><span>loop #3</span></span>
<span class="line"><span>loop #4</span></span>
<span class="line"><span>^C Trapped Ctrl-C</span></span>
<span class="line"><span>loop #5</span></span></code></pre></div><h3 id="退出信号" tabindex="-1">退出信号 <a class="header-anchor" href="#退出信号" aria-label="Permalink to “退出信号”">​</a></h3><p>可以捕获脚本退出时候的信号。</p><div class="language-bash"><button title="复制代码" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">trap</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;echo &#39; Trapped Ctrl-C&#39;&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> EXIT</span></span></code></pre></div><h3 id="移除信号" tabindex="-1">移除信号 <a class="header-anchor" href="#移除信号" aria-label="Permalink to “移除信号”">​</a></h3><p>使用 <code>--</code> 即可移除信号。</p><div class="language-bash"><button title="复制代码" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">trap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SIGINT</span></span></code></pre></div><h2 id="nohup" tabindex="-1">NOHUP <a class="header-anchor" href="#nohup" aria-label="Permalink to “NOHUP”">​</a></h2><p>No Hand Up，由该命令启动的进程或脚本会忽略 SIGHUB 信号。 也就是说，即使终端退出，由该终端启动的进程或脚本不会跟着一起退出。</p><div class="language-txt"><button title="复制代码" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>run a command immune to hangups, with output to a non-tty</span></span></code></pre></div><div class="language-bash"><button title="复制代码" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nohup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./foo</span></span></code></pre></div><p>默认会把 <code>STDOUT</code> 和 <code>STDERR</code> 重定向到 <code>nohup.out</code>。</p><div class="language-bash"><button title="复制代码" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-rw-------</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kuga</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kuga</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   40</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Sep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 18:46</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nohup.out</span></span></code></pre></div><p>自己重定向会更好一些。</p><div class="language-bash"><button title="复制代码" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nohup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./foo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> out.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> 2&gt;&amp;1</span></span></code></pre></div><div class="language-bash"><button title="复制代码" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-rw-rw-r--</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kuga</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kuga</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   62</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Sep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 18:50</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> out.log</span></span></code></pre></div><h2 id="nice-value" tabindex="-1">Nice Value <a class="header-anchor" href="#nice-value" aria-label="Permalink to “Nice Value”">​</a></h2><p>控制进程优先级的参数。<code>nice</code> 值越高，进程的优先级越低，分配到的 CPU 资源越少。</p><h3 id="范围" tabindex="-1">范围 <a class="header-anchor" href="#范围" aria-label="Permalink to “范围”">​</a></h3><p><code>nice</code> 值的范围从 <code>-20</code> 到 <code>19</code>：</p><ul><li><code>-20</code>：最高优先级。</li><li><code>0</code>：默认优先级。</li><li><code>19</code>：最低优先级。</li></ul><h3 id="启动进程优先级" tabindex="-1">启动进程优先级 <a class="header-anchor" href="#启动进程优先级" aria-label="Permalink to “启动进程优先级”">​</a></h3><div class="language-bash"><button title="复制代码" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nice</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> VALUE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> command</span></span></code></pre></div><div class="language-bash"><button title="复制代码" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nice</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./foo</span></span></code></pre></div><h3 id="修改进程优先级" tabindex="-1">修改进程优先级 <a class="header-anchor" href="#修改进程优先级" aria-label="Permalink to “修改进程优先级”">​</a></h3><div class="language-bash"><button title="复制代码" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">renice</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> VALUE</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PID</span></span></code></pre></div><div class="language-bash"><button title="复制代码" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">renice</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 404</span></span></code></pre></div><h3 id="权限" tabindex="-1">权限 <a class="header-anchor" href="#权限" aria-label="Permalink to “权限”">​</a></h3><ul><li>普通用户只能降低进程的优先级。</li><li>root 用户才能提高进程的优先级。</li></ul>`,42)]))}const o=i(e,[["render",t]]);export{c as __pageData,o as default};
